#summary How to work with the EEGAgent
#labels Phase-Implementation

==Introduction==

The EEGAgent implements NeuroServer's EEG role. It is possible to send EEG data to NeuroServer. An EDFHeader needs to be constructed to let NeuroServer know what the source is of incoming data. This can be done with a property file in which all EDF header fields are defined. (See the EDF specification for more information)

==Details==

The EEGAgent extends the DefaultAgent which has some basic commands:
 * `hello()`
 * `getRole()`
 * `getStatus()`
 * `close()`

The main function of the EEGAgent is to send EEG data to NeuroServer. An EEGAgent can be created with an hostname and port (both optional).

{{{
// create a new EEGAgent
EEGAgent agent = new EEGAgent("localhost", 8336);
		
// create a properties file
Properties properties = new Properties();
		
try {
    // load the properties from a file.
    properties.load(new FileInputStream("etc/header.properties"));
} catch (FileNotFoundException e) {
    e.printStackTrace();
} catch (IOException e) {
    e.printStackTrace();
}
		
// create a new EDFHeader with the properties
EDFHeader header = new EDFHeader(properties);
		
// set the agent's header
agent.setHeader(header);

// send an EEG Data Packet to NeuroServer
agent.sendPacket(new NeuroServerPacket(1, 3, new int[]{125, 129, 111}));

// close the agent and disconnect from NeuroServer.
agent.close();
}}}

You can of course send as many packets to NeuroServer as you like.

==Headers==

For clients connected to NeuroServer to know what kind of device the EEGAgent represents, the EEGAgent send a header to NeuroServer. This Header is in the [http://www.edfplus.info/ European Data Format] (EDF). In the property file you need to at least specify the following fields:

 * version
 * patient
 * recording
 * startdate
 * starttime
 * reserved
 * number.of.records
 * duration
 * number.of.signals
 * length